/** @hidden */
/// <reference path="../../../../vendor/i18next.d.ts" />
//@ts-ignore
import { i18n as i18nInstance } from 'i18next';
/// <reference path="../../../../vendor/react/react.d.ts" />
//@ts-ignore
import React, { Component } from 'react';
//@ts-ignore
import { AppContextType, Size } from '@grapecity/core-ui';
import { ReportViewer } from '../../control';
import { Model } from './types';
declare type Props = {
    viewer: ReportViewer;
    onPanelChange?: (panelId: string | null) => void;
    i18n: i18nInstance;
    size: Size;
    /**
     * Default width of sidebar - number of pixels or valid CSS length
     */
    defaultWidth?: number | string;
};
declare type SidebarState = Model & {
    narrowScreen: boolean;
    isToolbarVisible: boolean;
};
/** @hidden */
export declare class SidebarView extends Component<Props, SidebarState> {
//@ts-ignore
    static contextType: React.Context<import("@grapecity/core-ui/lib/types/utils").AppContextValue>;
    context: AppContextType;
    private _disposables;
    constructor(props: Props);
    componentWillUnmount(): void;
    private onStateChange;
    render(): JSX.Element | null;
}
export {};
